{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/TextUtils/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // useState hook is imported for declaring state variables.\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [Mode, SetMode] = useState(\"light\"); // State var 'Mode' tells the mode of the application: dark or light.\n\n  let toggleMode = () => {\n    //Function to toggle the mode of the Application\n    if (Mode === \"light\") {\n      // Apply light Mode\n      SetMode(\"light\");\n      document.body.style.background = \"white\";\n      showAlert(\"Light mode has been Enabled!\", \"success\");\n    } else if (Mode === \"danger\") {\n      // Apply dark red Mode \n      SetMode(\"danger\");\n      document.body.style.background = \"red\";\n      showAlert(\"Light mode has been Enabled!\", \"success\");\n    }\n  };\n  let RedMode = () => {\n    SetMode(\"danger\");\n    toggleMode();\n  };\n  const [alert, setalert] = useState(null); // State object 'alert' describes the alert message.\n  //Here alert is an object\n\n  //fat arrow function, when called used setalert to set the value of alert object\n  let showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n\n    // SetTimeout will automatically dismiss the alert (by setting it null) after 2000ms.\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      mode: Mode,\n      toggleMode: toggleMode,\n      RedMode: RedMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      mode: Mode,\n      showAlert: showAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"tSALfo+xJgv7EHikg7zJtuEc+RE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextForm","About","Alert","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","Mode","SetMode","toggleMode","document","body","style","background","showAlert","RedMode","alert","setalert","message","type","msg","setTimeout","children","mode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhinav/Desktop/TextUtils/src/App.js"],"sourcesContent":["import React ,{ useState } from 'react'; // useState hook is imported for declaring state variables.\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Footer from './components/Footer';\n\n\nexport default function App() {\n\n  const[Mode,SetMode] = useState(\"light\"); // State var 'Mode' tells the mode of the application: dark or light.\n  \n  let toggleMode = () =>{ //Function to toggle the mode of the Application\n    if(Mode === \"light\"){ \n      // Apply light Mode\n      SetMode(\"light\");\n      document.body.style.background = \"white\";\n      showAlert(\"Light mode has been Enabled!\",\"success\");\n    }\n    else if(Mode === \"danger\"){\n      // Apply dark red Mode \n      SetMode(\"danger\");\n      document.body.style.background = \"red\";\n      showAlert(\"Light mode has been Enabled!\",\"success\");\n    }\n  }\n \n  let RedMode = () =>{\n    SetMode(\"danger\");\n    toggleMode();\n  }\n\n\n  const[alert,setalert] = useState(null); // State object 'alert' describes the alert message.\n  //Here alert is an object\n  \n  //fat arrow function, when called used setalert to set the value of alert object\n  let showAlert = (message,type) => { \n    setalert({\n      msg: message,\n      type: type\n    });\n    \n    // SetTimeout will automatically dismiss the alert (by setting it null) after 2000ms.\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  }\n\n  return (\n    <>\n      {/* NavBar Component */}\n      <Navbar mode={Mode} toggleMode={toggleMode} RedMode={RedMode}/>\n\n      {/* Alert Component */}\n      <Alert alert={alert}/> \n\n      {/* TextForm Component */}\n      <TextForm mode={Mode} showAlert={showAlert} />\n\n      {/* About Component */}\n      <About/>\n      \n      {/* Footer Component */}\n      <Footer />\n    </>\n  );\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGzC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEzC,IAAIc,UAAU,GAAGA,CAAA,KAAK;IAAE;IACtB,IAAGF,IAAI,KAAK,OAAO,EAAC;MAClB;MACAC,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAG,OAAO;MACxCC,SAAS,CAAC,8BAA8B,EAAC,SAAS,CAAC;IACrD,CAAC,MACI,IAAGP,IAAI,KAAK,QAAQ,EAAC;MACxB;MACAC,OAAO,CAAC,QAAQ,CAAC;MACjBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAG,KAAK;MACtCC,SAAS,CAAC,8BAA8B,EAAC,SAAS,CAAC;IACrD;EACF,CAAC;EAED,IAAIC,OAAO,GAAGA,CAAA,KAAK;IACjBP,OAAO,CAAC,QAAQ,CAAC;IACjBC,UAAU,EAAE;EACd,CAAC;EAGD,MAAK,CAACO,KAAK,EAACC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC;;EAEA;EACA,IAAImB,SAAS,GAAGA,CAACI,OAAO,EAACC,IAAI,KAAK;IAChCF,QAAQ,CAAC;MACPG,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;;IAEF;IACAE,UAAU,CAAC,MAAM;MACfJ,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBAEEpB,OAAA,CAACN,MAAM;MAAC2B,IAAI,EAAEhB,IAAK;MAACE,UAAU,EAAEA,UAAW;MAACM,OAAO,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAG/DzB,OAAA,CAACH,KAAK;MAACiB,KAAK,EAAEA;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAGtBzB,OAAA,CAACL,QAAQ;MAAC0B,IAAI,EAAEhB,IAAK;MAACO,SAAS,EAAEA;IAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAG9CzB,OAAA,CAACJ,KAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAGRzB,OAAA,CAACF,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACT;AAEP;AAACrB,EAAA,CA3DuBD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}