{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/TextUtils/src/components/Navbar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Navbar(props) {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `navbar navbar-expand-lg bg-dark`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: `navbar-brand text-${props.mode === 'light' ? 'dark' : 'light'}`,\n        href: \"/\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"TextUtils\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 97\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        \"data-bs-toggle\": \"collapse\",\n        \"data-bs-target\": \"#navbarSupportedContent\",\n        \"aria-controls\": \"navbarSupportedContent\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-toggler-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check form-check-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: \"inlineRadioOptions\",\n          id: \"inlineRadio2\",\n          value: \"option2\",\n          onClick: props.lightMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `form-check-label text-${props.mode === 'white' ? 'dark' : 'light'}`,\n          for: \"inlineRadio2\",\n          children: \"Light mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check form-check-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: \"inlineRadioOptions\",\n          id: \"inlineRadio1\",\n          value: \"option1\",\n          onClick: props.RedMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `form-check-label text-${props.mode === 'white' ? 'dark' : 'light'}`,\n          for: \"inlineRadio1\",\n          children: \"Red Dark mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-link nav-link py-2 px-0 px-lg-2 dropdown-toggle d-flex align-items-center\",\n        id: \"bd-theme\",\n        type: \"button\",\n        \"aria-expanded\": \"false\",\n        \"data-bs-toggle\": \"dropdown\",\n        \"data-bs-display\": \"static\",\n        \"aria-label\": \"Toggle theme (dark)\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          class: \"bi my-1 theme-icon-active\",\n          children: /*#__PURE__*/_jsxDEV(\"use\", {\n            href: \"#moon-stars-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"d-lg-none ms-2\",\n          id: \"bd-theme-text\",\n          children: \"Toggle theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n//Typechecking through PropTypes for avoiding any bug caused by Syntax Error.\n_c = Navbar;\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string\n};\n\n// Seting default value of the props.\nNavbar.defaultProps = {\n  title: \"Set Text here\",\n  aboutText: \"Set aboutText here\"\n};\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Navbar","props","className","children","mode","href","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","value","onClick","lightMode","for","RedMode","class","_c","propTypes","title","string","isRequired","aboutText","defaultProps","$RefreshReg$"],"sources":["/Users/abhinav/Desktop/TextUtils/src/components/Navbar.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types' \n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg bg-dark`}>\n        <div className=\"container-fluid\">\n\n        {/* Title on the NavBar */}\n        <a className={`navbar-brand text-${props.mode === 'light' ? 'dark':'light'}`} href=\"/\"> <strong>TextUtils</strong></a>\n\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        {/* Dark mode Radios */}\n\n        <div className=\"form-check form-check-inline\">\n            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\" onClick={props.lightMode}/>\n            <label className={`form-check-label text-${props.mode === 'white' ? 'dark':'light'}`} for=\"inlineRadio2\" >Light mode</label>\n        </div>\n\n\n        <div className=\"form-check form-check-inline\">\n            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\" onClick={props.RedMode}/>\n            <label className={`form-check-label text-${props.mode === 'white' ? 'dark':'light'}`} for=\"inlineRadio1\" >Red Dark mode</label>\n        </div>\n\n        {/* <div className=\"form-check form-check-inline\">\n            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\"/>\n            <label className=\"form-check-label\" for=\"inlineRadio2\">Blue Dark mode</label>\n        </div>\n\n        <div className=\"form-check form-check-inline\">\n            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\"/>\n            <label className=\"form-check-label\" for=\"inlineRadio2\">Yellow Dark mode</label>\n        </div>\n\n        <div className=\"form-check form-check-inline\">\n            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\"/>\n            <label className=\"form-check-label\" for=\"inlineRadio2\">Black Dark mode</label>\n        </div> */}\n \n        {/* <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">*/}\n            {/* <div className=\"form-check form-switch text-light\">\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\n            <label className={`form-check-label text-${props.mode === 'light' ? 'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\" >Enable Dark Mode</label>\n            </div> */}\n        {/* </div> */}\n\n        <button class=\"btn btn-link nav-link py-2 px-0 px-lg-2 dropdown-toggle d-flex align-items-center\" id=\"bd-theme\" type=\"button\" aria-expanded=\"false\" data-bs-toggle=\"dropdown\" data-bs-display=\"static\" aria-label=\"Toggle theme (dark)\">\n              <svg class=\"bi my-1 theme-icon-active\"><use href=\"#moon-stars-fill\"></use></svg>\n              <span class=\"d-lg-none ms-2\" id=\"bd-theme-text\">Toggle theme</span>\n            </button>\n\n        </div> \n    </nav>\n  )\n}\n\n\n//Typechecking through PropTypes for avoiding any bug caused by Syntax Error.\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string\n}\n\n// Seting default value of the props.\nNavbar.defaultProps = {\n    title: \"Set Text here\",\n    aboutText: \"Set aboutText here\"\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,MAAMA,CAACC,KAAK,EAAE;EACpC,oBACEF,OAAA;IAAKG,SAAS,EAAG,iCAAiC;IAAAC,QAAA,eAC9CJ,OAAA;MAAKG,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAGhCJ,OAAA;QAAGG,SAAS,EAAG,qBAAoBD,KAAK,CAACG,IAAI,KAAK,OAAO,GAAG,MAAM,GAAC,OAAQ,EAAE;QAACC,IAAI,EAAC,GAAG;QAAAF,QAAA,GAAC,GAAC,eAAAJ,OAAA;UAAAI,QAAA,EAAQ;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAEtHV,OAAA;QAAQG,SAAS,EAAC,gBAAgB;QAACQ,IAAI,EAAC,QAAQ;QAAC,kBAAe,UAAU;QAAC,kBAAe,yBAAyB;QAAC,iBAAc,wBAAwB;QAAC,iBAAc,OAAO;QAAC,cAAW,mBAAmB;QAAAP,QAAA,eAC/MJ,OAAA;UAAMG,SAAS,EAAC;QAAqB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAQ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpC,eAITV,OAAA;QAAKG,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBACzCJ,OAAA;UAAOG,SAAS,EAAC,kBAAkB;UAACQ,IAAI,EAAC,OAAO;UAACC,IAAI,EAAC,oBAAoB;UAACC,EAAE,EAAC,cAAc;UAACC,KAAK,EAAC,SAAS;UAACC,OAAO,EAAEb,KAAK,CAACc;QAAU;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eACxIV,OAAA;UAAOG,SAAS,EAAG,yBAAwBD,KAAK,CAACG,IAAI,KAAK,OAAO,GAAG,MAAM,GAAC,OAAQ,EAAE;UAACY,GAAG,EAAC,cAAc;UAAAb,QAAA,EAAE;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1H,eAGNV,OAAA;QAAKG,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBACzCJ,OAAA;UAAOG,SAAS,EAAC,kBAAkB;UAACQ,IAAI,EAAC,OAAO;UAACC,IAAI,EAAC,oBAAoB;UAACC,EAAE,EAAC,cAAc;UAACC,KAAK,EAAC,SAAS;UAACC,OAAO,EAAEb,KAAK,CAACgB;QAAQ;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eACtIV,OAAA;UAAOG,SAAS,EAAG,yBAAwBD,KAAK,CAACG,IAAI,KAAK,OAAO,GAAG,MAAM,GAAC,OAAQ,EAAE;UAACY,GAAG,EAAC,cAAc;UAAAb,QAAA,EAAE;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7H,eAwBNV,OAAA;QAAQmB,KAAK,EAAC,mFAAmF;QAACN,EAAE,EAAC,UAAU;QAACF,IAAI,EAAC,QAAQ;QAAC,iBAAc,OAAO;QAAC,kBAAe,UAAU;QAAC,mBAAgB,QAAQ;QAAC,cAAW,qBAAqB;QAAAP,QAAA,gBACjOJ,OAAA;UAAKmB,KAAK,EAAC,2BAA2B;UAAAf,QAAA,eAACJ,OAAA;YAAKM,IAAI,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAO;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAChFV,OAAA;UAAMmB,KAAK,EAAC,gBAAgB;UAACN,EAAE,EAAC,eAAe;UAAAT,QAAA,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV;;AAGA;AAAAU,EAAA,GA1DwBnB,MAAM;AA2D9BA,MAAM,CAACoB,SAAS,GAAG;EACfC,KAAK,EAAExB,SAAS,CAACyB,MAAM,CAACC,UAAU;EAClCC,SAAS,EAAE3B,SAAS,CAACyB;AACzB,CAAC;;AAED;AACAtB,MAAM,CAACyB,YAAY,GAAG;EAClBJ,KAAK,EAAE,eAAe;EACtBG,SAAS,EAAE;AACf,CAAC;AAAA,IAAAL,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}