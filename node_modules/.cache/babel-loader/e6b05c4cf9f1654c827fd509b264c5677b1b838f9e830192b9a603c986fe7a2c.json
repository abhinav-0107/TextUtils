{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/TextUtils/src/components/Navbar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Navbar(props) {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `navbar navbar-expand-lg bg-${props.mode}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: `navbar-brand text-${props.mode === 'light' ? 'dark' : 'light'}`,\n        href: \"/\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"TextUtils\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 95\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        \"data-bs-toggle\": \"collapse\",\n        \"data-bs-target\": \"#navbarSupportedContent\",\n        \"aria-controls\": \"navbarSupportedContent\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-toggler-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"navbarSupportedContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav me-auto mb-2 mb-lg-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-switch text-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            role: \"switch\",\n            id: \"flexSwitchCheckDefault\",\n            onClick: props.toggleMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`,\n            htmlFor: \"flexSwitchCheckDefault\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Enable Dark Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 131\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n//Typechecking through PropTypes for avoiding any bug caused by Syntax Error.\n_c = Navbar;\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string\n};\n\n// Seting default value of the props.\nNavbar.defaultProps = {\n  title: \"Set Text here\",\n  aboutText: \"Set aboutText here\"\n};\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Navbar","props","className","mode","children","href","fileName","_jsxFileName","lineNumber","columnNumber","type","id","role","onClick","toggleMode","htmlFor","_c","propTypes","title","string","isRequired","aboutText","defaultProps","$RefreshReg$"],"sources":["/Users/abhinav/Desktop/TextUtils/src/components/Navbar.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types' \n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg bg-${props.mode}`}>\n    <div className=\"container-fluid\">\n\n      {/* Title on the NavBar */}\n      <a className={`navbar-brand text-${props.mode === 'light' ? 'dark':'light'}`} href=\"/\"> <strong>TextUtils</strong></a>\n\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          \n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\"></ul>\n\n        {/* Dark mode Switch  */}\n         <div className=\"form-check form-switch text-light\">\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\n          <label className={`form-check-label text-${props.mode === 'light' ? 'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\"> <strong>Enable Dark Mode</strong></label>\n        </div>\n\n      </div>\n\n    </div> \n    </nav>\n  )\n}\n\n\n//Typechecking through PropTypes for avoiding any bug caused by Syntax Error.\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string\n}\n\n// Seting default value of the props.\nNavbar.defaultProps = {\n    title: \"Set Text here\",\n    aboutText: \"Set aboutText here\"\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,MAAMA,CAACC,KAAK,EAAE;EACpC,oBACEF,OAAA;IAAKG,SAAS,EAAG,8BAA6BD,KAAK,CAACE,IAAK,EAAE;IAAAC,QAAA,eAC3DL,OAAA;MAAKG,SAAS,EAAC,iBAAiB;MAAAE,QAAA,gBAG9BL,OAAA;QAAGG,SAAS,EAAG,qBAAoBD,KAAK,CAACE,IAAI,KAAK,OAAO,GAAG,MAAM,GAAC,OAAQ,EAAE;QAACE,IAAI,EAAC,GAAG;QAAAD,QAAA,GAAC,GAAC,eAAAL,OAAA;UAAAK,QAAA,EAAQ;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAEtHV,OAAA;QAAQG,SAAS,EAAC,gBAAgB;QAACQ,IAAI,EAAC,QAAQ;QAAC,kBAAe,UAAU;QAAC,kBAAe,yBAAyB;QAAC,iBAAc,wBAAwB;QAAC,iBAAc,OAAO;QAAC,cAAW,mBAAmB;QAAAN,QAAA,eAC7ML,OAAA;UAAMG,SAAS,EAAC;QAAqB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAQ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACtC,eACTV,OAAA;QAAKG,SAAS,EAAC,0BAA0B;QAACS,EAAE,EAAC,wBAAwB;QAAAP,QAAA,gBAEnEL,OAAA;UAAIG,SAAS,EAAC;QAAiC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAGpDV,OAAA;UAAKG,SAAS,EAAC,mCAAmC;UAAAE,QAAA,gBACjDL,OAAA;YAAOG,SAAS,EAAC,kBAAkB;YAACQ,IAAI,EAAC,UAAU;YAACE,IAAI,EAAC,QAAQ;YAACD,EAAE,EAAC,wBAAwB;YAACE,OAAO,EAAEZ,KAAK,CAACa;UAAW;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE,eAC1HV,OAAA;YAAOG,SAAS,EAAG,yBAAwBD,KAAK,CAACE,IAAI,KAAK,OAAO,GAAG,MAAM,GAAC,OAAQ,EAAE;YAACY,OAAO,EAAC,wBAAwB;YAAAX,QAAA,GAAC,GAAC,eAAAL,OAAA;cAAAK,QAAA,EAAQ;YAAgB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7J;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEV;;AAGA;AAAAO,EAAA,GA7BwBhB,MAAM;AA8B9BA,MAAM,CAACiB,SAAS,GAAG;EACfC,KAAK,EAAErB,SAAS,CAACsB,MAAM,CAACC,UAAU;EAClCC,SAAS,EAAExB,SAAS,CAACsB;AACzB,CAAC;;AAED;AACAnB,MAAM,CAACsB,YAAY,GAAG;EAClBJ,KAAK,EAAE,eAAe;EACtBG,SAAS,EAAE;AACf,CAAC;AAAA,IAAAL,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}