{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/TextUtils/src/components/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [text, setText] = useState('');\n  const handleUpClick = () => {\n    let newText = text.toUpperCase(text);\n    setText(newText);\n    props.showAlert(\"Converted to UpperCase!\", \"success\");\n  };\n  const handlelowClick = () => {\n    let newText = text.toLowerCase(text);\n    setText(newText);\n    props.showAlert(\"Converted to LowerCase!\", \"success\");\n  };\n  const handleResetClick = () => {\n    setText('');\n    props.showAlert(\"Text cleared!\", \"success\");\n  };\n  const handleCopy = () => {\n    var text = document.getElementById(\"mybox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Copied to clipboard!\", \"success\");\n  };\n\n  // While making a textarea we have to listen to the onChange Event and have to write the logic that what we want to do when the user tries to change the text area. When we listen to the onchange Event then we get free event object and from there we can extract the current value of the text form.\n\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `text-${props.mode === 'light' ? 'dark' : 'light'}`,\n        children: \"Enter Text to analyze!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: `form-control bg-${props.mode === 'light' ? 'light' : 'secondary'} text-${props.mode === 'light' ? 'dark' : 'light'}`,\n          value: text,\n          onChange: handleOnChange,\n          id: \"mybox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger mx-1 \",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger mx-1\",\n        onClick: handlelowClick,\n        children: \"Convert to lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger mx-1\",\n        onClick: handleCopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark mx-1\",\n        onClick: handleResetClick,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container my-5 text-${props.mode === 'light' ? 'dark' : 'light'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", text.split(\" \").length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Estimated reading time : \", 0.008 * text.split(\" \").length, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text.length > 0 ? text : \"Type in the text box above to preview it here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"Kt/yo4ZcRlSRxcmAcKAou8CnBS0=\");\n_c = TextForm;\nTextForm.propTypes = {\n  title: PropTypes.string.isRequired\n};\nTextForm.defaultProps = {\n  title: \"Enter Text to analyze\"\n};\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","text","setText","handleUpClick","newText","toUpperCase","showAlert","handlelowClick","toLowerCase","handleResetClick","handleCopy","document","getElementById","select","navigator","clipboard","writeText","value","handleOnChange","event","target","children","className","mode","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","split","length","_c","propTypes","title","string","isRequired","defaultProps","$RefreshReg$"],"sources":["/Users/abhinav/Desktop/TextUtils/src/components/TextForm.js"],"sourcesContent":["import React , {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function TextForm(props) {\n    const[text,setText] = useState('');\n\n    const handleUpClick = () =>{\n        let newText = text.toUpperCase(text);\n        setText(newText);\n        props.showAlert(\"Converted to UpperCase!\",\"success\");\n    }\n\n    const handlelowClick = () =>{\n        let newText = text.toLowerCase(text);\n        setText(newText);\n        props.showAlert(\"Converted to LowerCase!\",\"success\");\n    }\n\n    const handleResetClick = () =>{\n        setText('');\n        props.showAlert(\"Text cleared!\",\"success\");\n    }\n\n    const handleCopy = () =>{\n        var text = document.getElementById(\"mybox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Copied to clipboard!\",\"success\");\n    } \n\n    // While making a textarea we have to listen to the onChange Event and have to write the logic that what we want to do when the user tries to change the text area. When we listen to the onchange Event then we get free event object and from there we can extract the current value of the text form.\n\n    const handleOnChange = (event) =>{\n        setText(event.target.value);\n    } \n\n    return (\n        <>\n        <div className='container'>\n\n            {/* Heading */}\n            <h1 className={`text-${props.mode=== 'light' ? 'dark' : 'light'}`}>Enter Text to analyze!</h1>\n\n            {/* TextArea */}\n            <div className=\"mb-3\">\n                <textarea className={`form-control bg-${props.mode=== 'light' ? 'light' : 'secondary'} text-${props.mode=== 'light' ? 'dark' : 'light'}`} value={text} onChange={handleOnChange} id=\"mybox\" rows=\"8\">\n                </textarea>\n            </div>\n\n            {/* All Buttons */}\n            <button className=\"btn btn-danger mx-1 \" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button className=\"btn btn-danger mx-1\" onClick={handlelowClick}>Convert to lowercase</button>\n            <button className=\"btn btn-danger mx-1\" onClick={handleCopy}>Copy Text</button>\n            <button className=\"btn btn-dark mx-1\" onClick={handleResetClick}>Reset</button>\n\n        </div>\n\n        <div className={`container my-5 text-${props.mode=== 'light' ? 'dark' : 'light'}`}>\n            <h2>Your Text Summary</h2>\n            <p> {text.split(\" \").length} words and {text.length} characters</p>\n            <p>Estimated reading time : {0.008 * text.split(\" \").length} minutes</p>\n            <div className='my-5'>\n                <h2>Preview</h2>\n                <p>{text.length>0 ? text : \"Type in the text box above to preview it here!\"}</p>\n            </div>\n        </div>\n        </>  \n  )\n}\n\nTextForm.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nTextForm.defaultProps = {\n    title: \"Enter Text to analyze\"\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}